(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5853],{4070:function(e,t,n){"use strict";var r=n(5893),a=(n(7294),{1:{notation:"Constant",value:"1"},"log log n":{notation:"Double Logarithmic",value:"Log Log n"},"log n":{notation:"Logarithmic",value:"Log n"},"\u221an":{notation:"Square Root",value:"\u221an"},n:{notation:"Linear",value:"n"},n2:{notation:"Quadratic",value:(0,r.jsxs)(r.Fragment,{children:["n",(0,r.jsx)("sup",{children:"2"})]})},"2n":{notation:"Exponential",value:(0,r.jsxs)(r.Fragment,{children:["2",(0,r.jsx)("sup",{children:"n"})]})},"n!":{notation:"Factorial",value:"n!"}});t.Z=function(e){var t=e.type,n=void 0===t?"time":t,i=e.value,l=e.children,o=a[i]||{},s=o.notation,u=o.value,p=void 0===u?i:u;return s?(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)("strong",{children:["time"===n?"Time  Complexity":"Space Complexity",": "]}),"O(",p,") ",s?"- ".concat(s):"",l,(0,r.jsx)("br",{})]}):null}},2919:function(e,t,n){"use strict";n.d(t,{Z:function(){return y}});var r=n(5893),a=n(6156),i=(n(7294),n(2465)),l=n(9163);function o(){var e=(0,i.Z)(["\n  display: table-cell;\n"]);return o=function(){return e},e}function s(){var e=(0,i.Z)(["\n  display: table-cell;\n  text-align: right;\n  padding-right: 1em;\n  user-select: none;\n  opacity: 0.5;\n"]);return s=function(){return e},e}function u(){var e=(0,i.Z)(["\n  display: table-row;\n"]);return u=function(){return e},e}function p(){var e=(0,i.Z)(["\n  text-align: left;\n  margin: 1em 0;\n  padding: 0.5em;\n  overflow: scroll;\n\n  & .token-line {\n    line-height: 1.3em;\n    height: 1.3em;\n  }\n"]);return p=function(){return e},e}function m(){var e=(0,i.Z)(["\n  font-family: sans-serif;\n  text-align: center;\n"]);return m=function(){return e},e}var c=l.ZP.div(m()),d=l.ZP.pre(p()),h=l.ZP.div(u()),k=l.ZP.span(s()),g=l.ZP.span(o()),f=n(9235),b=n(5424);function N(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function v(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?N(Object(n),!0).forEach((function(t){(0,a.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):N(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var y=function(e){var t=e.children,n=e.language,a=void 0===n?"javascript":n;return(0,r.jsx)(c,{children:(0,r.jsx)(f.ZP,v(v({},f.lG),{},{theme:b.Z,code:t.toString(),language:a,children:function(e){var t=e.className,n=e.style,a=e.tokens,i=e.getLineProps,l=e.getTokenProps;return(0,r.jsx)(d,{className:t,style:n,children:a.map((function(e,t){return(0,r.jsxs)(h,v(v({},i({line:e,key:t})),{},{children:[(0,r.jsx)(k,{children:t+1}),(0,r.jsx)(g,{children:e.map((function(e,t){return(0,r.jsx)("span",v({},l({token:e,key:t})),t)}))})]}),t)}))})}}))})}},3042:function(e,t,n){"use strict";var r=n(5893),a=n(7294),i=n(1516),l=n(2105),o=n(2868);t.Z=function(e){var t=e.children,n=e.url,s=(0,a.useCallback)((function(e){e.preventDefault(),i.ZP.outboundLink({label:"Clicked ".concat(t)},(function(){(0,l.WF)(n)}),[o.ei.ExternalLink])}),[n]);return(0,r.jsx)("a",{href:"#",onClick:s,target:"_blank",children:t})}},7610:function(e,t,n){"use strict";n.d(t,{F:function(){return l}});var r=n(5893),a=n(5988),i=n(1664),l=function(e){var t=e.meta,n=e.link,l=e.isBlogPost;return(0,r.jsxs)(r.Fragment,{children:[l?(0,r.jsx)("h1",{className:"jsx-4001257583 "+((l?"great-title":null)||""),children:t.title}):(0,r.jsx)(i.default,{href:n,children:(0,r.jsx)("h1",{className:"jsx-4001257583 "+((l?"great-title":null)||""),children:t.title})}),(0,r.jsxs)("div",{className:"jsx-4001257583 details",children:[l?null:(0,r.jsx)("p",{className:"jsx-4001257583",children:t.description}),(0,r.jsx)("span",{className:"jsx-4001257583",children:t.date}),(0,r.jsxs)("span",{role:"img","aria-label":"one coffee",className:"jsx-4001257583",children:["\u2615 ",t.readTime+" mins read"]})]}),(0,r.jsx)(a.default,{id:"4001257583",children:["h1.jsx-4001257583{font-size:1.5rem;font-weight:700;color:#f39c12;}",".great-title.jsx-4001257583{font-size:2rem;}",".details.jsx-4001257583 span.jsx-4001257583{color:#bdbdbd;margin-right:1rem;}",".details.jsx-4001257583{margin-bottom:1rem;}"]})]})}},2477:function(e,t,n){"use strict";var r=n(5893),a=n(2465),i=n(9008),l=n(9163),o=n(9232),s=n(1930);function u(){var e=(0,a.Z)(["\n  display: flex;\n  flex-direction: row;\n"]);return u=function(){return e},e}var p=l.ZP.div(u());t.Z=function(e){var t=e.title;return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i.default,{children:[(0,r.jsx)("title",{children:t}),(0,r.jsx)("meta",{name:"viewport",content:"initial-scale=1.0, width=device-width"})]}),(0,r.jsxs)(p,{children:[(0,r.jsx)(s.Z,{}),(0,r.jsx)(o.Z,{})]})]})}},2052:function(e,t,n){"use strict";n.d(t,{Z:function(){return u}});var r=n(5893),a=n(2465),i=n(7610),l=n(2477);function o(){var e=(0,a.Z)(["\n  margin: 0 35px;\n"]);return o=function(){return e},e}var s=n(9163).ZP.div(o());function u(e){var t=e.children,n=e.meta;return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(l.Z,{title:n.title}),(0,r.jsxs)(s,{children:[(0,r.jsx)(i.F,{meta:n,isBlogPost:!0}),(0,r.jsx)("article",{children:t})]})]})}},9087:function(e,t,n){"use strict";var r=n(6156),a=n(5893),i=n(2105);function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}t.Z=function(e){var t=e.label,n=e.url,r=e.name,l=e.anchor,s={};return n?s.href=n:l?s.href="#".concat((0,i.Md)(t)):r&&(s.name="".concat((0,i.Md)(t))),(0,a.jsx)("a",o(o({},s),{},{children:t}))}},1930:function(e,t,n){"use strict";var r=n(5893),a=n(2465),i=n(1664);function l(){var e=(0,a.Z)(["\n  width: 18%;\n"]);return l=function(){return e},e}var o=n(9163).ZP.div(l());t.Z=function(e){var t=e.type,n=void 0===t?"header-logo":t;return n?(0,r.jsx)(o,{children:(0,r.jsx)(i.default,{href:"/",className:"link",children:(0,r.jsx)("img",{src:"/images/webslate.jpg",alt:"Web Slate.io",className:n})})}):(0,r.jsx)(o,{children:(0,r.jsx)("img",{src:"images/webslate.jpg",alt:"Web Slate.io"})})}},9232:function(e,t,n){"use strict";n.d(t,{Z:function(){return p}});var r=n(5893),a=n(2465),i=n(7294),l=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e?"/blogs/".concat(e):"/"},o=[{label:"Home",url:"/"},{label:"JavaScript",url:l("js")},{label:"HTML5",url:l("html")},{label:"React",url:l("react")},{label:"Programming",url:l("programming")},{label:"About",url:"/about"}];function s(){var e=(0,a.Z)(["\n  width: 82%;\n  margin-top: 35px;\n"]);return s=function(){return e},e}var u=n(9163).ZP.div(s());var p=function(e){var t=e.noStyle,n=void 0===t||t?u:i.Fragment;return(0,r.jsx)(n,{children:o.map((function(e,t){return(0,r.jsxs)("span",{children:[t>0&&" | ",(null===e||void 0===e?void 0:e.label)&&(0,r.jsx)("a",{href:null===e||void 0===e?void 0:e.url,children:null===e||void 0===e?void 0:e.label})]},null===e||void 0===e?void 0:e.label)}))})}},5853:function(e,t,n){"use strict";n.r(t),n.d(t,{meta:function(){return d},default:function(){return g}});var r=n(6156),a=n(7375),i=(n(7294),n(4137)),l=n(2052),o=n(2919),s=n(3042),u=n(9087),p=n(4070);function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){(0,r.Z)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var d={title:"Missing Ranges (Draft)",description:"You are given an inclusive range [lower, upper] and a sorted unique integer array nums, where all elements are in the inclusive range.",date:"Feb 7, 2023",readTime:10},h={meta:d},k=function(e){var t=e.children;return(0,i.kt)(l.Z,{meta:d},t)};function g(e){var t=e.components,n=(0,a.Z)(e,["components"]);return(0,i.kt)(k,c(c(c({},h),n),{},{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",null,"Straight to the Point !"),(0,i.kt)("p",null,"Are you landed to this page and rushing for the immediate solution in javascript. here you go !!"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Step 1: ...."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Step 2: ...."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Step 3: ....")))),(0,i.kt)(o.Z,{mdxType:"CodeBlock"},"\nvar findMissingRanges = function(nums, lower, upper) {\n};\n".trim()),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"On High level note, It worth to read in detail for a better understanding.",(0,i.kt)("br",{parentName:"p"}),"\n","This is one of the Facebook interview question and Refer to Similar Leet code problem as well - ",(0,i.kt)(s.Z,{url:"https://leetcode.com/problems/add-strings/description/",mdxType:"ExternalLink"},"415. Add Strings"))),(0,i.kt)("h1",null,"Table of Contents"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#problem-statement"}),"Problem Statement")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#constraints"}),"Constraints")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#expected"}),"Expected")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#test-cases"}),"Test Cases")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#foot-note"}),"Foot Note")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#solution-intro"}),"Solution Intro")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#solutions"}),"Solutions"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#brute-force"}),"Brute Force")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#approach-1-linear-scan"}),"Approach 1: Linear Scan")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#$Approach-2$"}),"$Approach-2$")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#time-optimized"}),"Time Optimized")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#space-optimized"}),"Space Optimized")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#other-questions"}),"Other Possible Questions"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#$Question-1$"}),"$Question-1$")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#$Question-2$"}),"$Question-2$")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#$Question-3$"}),"$Question-3$")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",c({parentName:"li"},{href:"#$Question-4$"}),"$Question-4$"))))),(0,i.kt)("h2",null,(0,i.kt)(u.Z,{label:"Problem Statement",name:!0,mdxType:"AnchorLink"})),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"You are given an inclusive range ","[lower, upper]"," and a sorted unique integer array nums, where all elements are in the inclusive range.",(0,i.kt)("br",null),"\nA number x is considered missing if x is in the range ","[lower, upper]"," and x is not in nums.",(0,i.kt)("br",null),"\nReturn the smallest sorted list of ranges that cover every missing number exactly. That is, no element of nums is in any of the ranges, and each missing number is in one of the ranges.",(0,i.kt)("br",null),"\nEach range ","[a,b]"," in the list should be output as:",(0,i.kt)("br",null)),(0,i.kt)("ol",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ol"},'"a->b" if a != b'),(0,i.kt)("li",{parentName:"ol"},'"a" if a == b'))),(0,i.kt)(o.Z,{mdxType:"CodeBlock"},"\nString [] findMissingRanges(number[] nums, number lower, number upper)\n".trim()),(0,i.kt)("h3",null,(0,i.kt)(u.Z,{label:"Constraints",name:!0,mdxType:"AnchorLink"})),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"-109 <= lower <= upper <= 109"),(0,i.kt)("li",{parentName:"ol"},"0 <= nums.length <= 100"),(0,i.kt)("li",{parentName:"ol"},"lower <= nums","[i]"," <= upper"),(0,i.kt)("li",{parentName:"ol"},"All the values of nums are unique.")),(0,i.kt)("h3",null,(0,i.kt)(u.Z,{label:"Expected",name:!0,mdxType:"AnchorLink"})),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Sum of Two String return in String")),(0,i.kt)("h3",null,(0,i.kt)(u.Z,{label:"Test Cases",name:!0,mdxType:"AnchorLink"})),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Input = nums = ","[0,1,3,50,75]",", lower = 0, upper = 99 Output = ",'["2","4->49","51->74","76->99"]',(0,i.kt)("br",null),"\nExplanation: The ranges are:",(0,i.kt)("br",null),"[2,2]",' --\x3e "2"',(0,i.kt)("br",null),"[4,49]",' --\x3e "4->49"',(0,i.kt)("br",null),"[51,74]",' --\x3e "51->74"',(0,i.kt)("br",null),"[76,99]",' --\x3e "76->99"',(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Input = nums = ","[-1]",", lower = -1, upper = -1 Output = []",(0,i.kt)("br",null),"\nExplanation: There are no missing ranges since there are no missing numbers.")),(0,i.kt)("h3",null,(0,i.kt)(u.Z,{label:"Foot Note",name:!0,mdxType:"AnchorLink"})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Complexity 1")),": Any solution must have time and space complexities of at least O(N) to deal with the array of N integers. A relatively simple solution considering all possible contiguous subarrays, or in fact any solution counting the valid subarrays one-by-one, would require a time complexity of at least O(N^2). However, a number of observations can allow this to be optimized down to the ideal time complexity of O(N). For example, letting L","[i]"," be the number of valid subarrays ending at index i (useful to compute on the way to the final answer), consider how we might efficiently compute L","[i]"," for each i from 1 to N by reusing past information rather than computing it from scratch.",(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Complexity 2")),": When analyzing such a solution, note that even if we\u2019re computing N values L","[1..N]",", and computing any single one of those values might take on the order of N steps, the overall time complexity will not necessarily be O(N^2) - we should instead consider how many steps may occur in total across all N of them in the worst case."),(0,i.kt)("h3",null,(0,i.kt)(u.Z,{label:"Solution Intro",name:!0,mdxType:"AnchorLink"})),(0,i.kt)("p",null,"Lets see the list of approaches and their complexities."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Approach 1: Elementary Math"),(0,i.kt)("li",{parentName:"ol"},"Approach 2: Using type casting operators."),(0,i.kt)("li",{parentName:"ol"},"Approach 3: Computing G","[i]"," for each i from 1 to N is a promising approach, but we\u2019ll still need to consider how to do so as efficiently as possible. We can observe that it\u2019s not possible to compute G","[i]"," purely based on the values of G","[i-1]",", a","[i-1]",", and a","[i]","; we may need more information about earlier a values as well, but would like to avoid simply scanning over all of them. Out of earlier indices j (such that j < i), we can consider which indices are worth considering as potential candidates for G","[i]"," - for example, if there exists a pair of indices j and k such that j < k and a","[j]"," < a","[k]",", can index j ever be a candidate for G","[i]"," for any i > k? If we can maintain information about the set of these possible candidate indices as we go through the array, it\u2019s possible to efficiently determine the one that\u2019s actually equal to G","[i]"," for each i.")),(0,i.kt)("hr",null),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",c({parentName:"tr"},{align:null})),(0,i.kt)("th",c({parentName:"tr"},{align:"center"}),"Approach"),(0,i.kt)("th",c({parentName:"tr"},{align:"right"}),"Time Complexity"),(0,i.kt)("th",c({parentName:"tr"},{align:"right"}),"Space Complexity"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),"1"),(0,i.kt)("td",c({parentName:"tr"},{align:"center"}),"Brute Force"),(0,i.kt)("td",c({parentName:"tr"},{align:"right"}),"O(n)"),(0,i.kt)("td",c({parentName:"tr"},{align:"right"}),"O(n)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),"2"),(0,i.kt)("td",c({parentName:"tr"},{align:"center"}),"Approach 1 - Linear Scan"),(0,i.kt)("td",c({parentName:"tr"},{align:"right"}),"O(n)"),(0,i.kt)("td",c({parentName:"tr"},{align:"right"}),"O(1)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),"3"),(0,i.kt)("td",c({parentName:"tr"},{align:"center"}),"Approach 2 - ?"),(0,i.kt)("td",c({parentName:"tr"},{align:"right"}),"O(n\u200b)"),(0,i.kt)("td",c({parentName:"tr"},{align:"right"}),"O(n)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),"4"),(0,i.kt)("td",c({parentName:"tr"},{align:"center"}),"Time Optimized"),(0,i.kt)("td",c({parentName:"tr"},{align:"right"}),"O(n)"),(0,i.kt)("td",c({parentName:"tr"},{align:"right"}),"O(n)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",c({parentName:"tr"},{align:null}),"5"),(0,i.kt)("td",c({parentName:"tr"},{align:"center"}),"Memory Optimized"),(0,i.kt)("td",c({parentName:"tr"},{align:"right"}),"O(n)"),(0,i.kt)("td",c({parentName:"tr"},{align:"right"}),"O(n)")))),(0,i.kt)("hr",null),(0,i.kt)("h2",null,(0,i.kt)(u.Z,{label:"Solutions",name:!0,mdxType:"AnchorLink"})),(0,i.kt)("p",null,"With no further due, lets take a example of code solutions."),(0,i.kt)("h3",null,(0,i.kt)(u.Z,{label:"Brute Force",name:!0,mdxType:"AnchorLink"})),(0,i.kt)("p",null,"Description"),(0,i.kt)(o.Z,{mdxType:"CodeBlock"},"\nvar findMissingRanges = function(nums, lower, upper) {\n};\n".trim()),(0,i.kt)(p.Z,{type:"time",value:"n+m",mdxType:"BigO"}),(0,i.kt)(p.Z,{type:"space",value:"n+m",mdxType:"BigO"}),(0,i.kt)("h3",null,(0,i.kt)(u.Z,{label:"Approach 1: Linear Scan",name:!0,mdxType:"AnchorLink"})),(0,i.kt)("p",null,"Basically, Program need to iterate the given number ",(0,i.kt)("inlineCode",{parentName:"p"},"nums")," array and find missing series using another method ",(0,i.kt)("inlineCode",{parentName:"p"},"formatMissingNumbers")," to update the given pattern format them ",(0,i.kt)("inlineCode",{parentName:"p"},'"4->49"')),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Step 1: Initialize the array variable ",(0,i.kt)("inlineCode",{parentName:"li"},"result"),".",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Step 2: Initialize the integer variable ",(0,i.kt)("inlineCode",{parentName:"li"},"previous")," with computing lower minus one (lower - 1).",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Step 3: Iterate the given number ",(0,i.kt)("inlineCode",{parentName:"li"},"nums")," array.",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Step 3.1: Inside Loop, Initialize the integer variable ",(0,i.kt)("inlineCode",{parentName:"li"},"current")," with value current indexed number ",(0,i.kt)("inlineCode",{parentName:"li"},"nums[i]")," if its not last item else store the upper value with adding one (1).",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Step 3.2: If ",(0,i.kt)("inlineCode",{parentName:"li"},"lower")," value which is ",(0,i.kt)("inlineCode",{parentName:"li"},"previous")," is still lesser than or equal to ",(0,i.kt)("inlineCode",{parentName:"li"},"current")," value then read the ",(0,i.kt)("inlineCode",{parentName:"li"},"previous")," + 1 (lower value) and ",(0,i.kt)("inlineCode",{parentName:"li"},"current")," - 1 (upper value) to generate those series using ",(0,i.kt)("inlineCode",{parentName:"li"},"formatMissingNumbers"),".",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Step 3.2: Create ",(0,i.kt)("inlineCode",{parentName:"li"},"formatMissingNumbers")," function to find all the missing numbers passsing previous plus 1 (",(0,i.kt)("inlineCode",{parentName:"li"},"previous")," + 1) and current minus 1 (",(0,i.kt)("inlineCode",{parentName:"li"},"current")," - 1).",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Step 3.3: Push the Formatted value to ",(0,i.kt)("inlineCode",{parentName:"li"},"result")," array.",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Step 3.3: Assign the ",(0,i.kt)("inlineCode",{parentName:"li"},"current")," value to ",(0,i.kt)("inlineCode",{parentName:"li"},"previous")," variable.",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Step 4: Return the result.",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Step 5: In ",(0,i.kt)("inlineCode",{parentName:"li"},"formatMissingNumbers")," function, read the lower and upper value.",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Step 6: Return the lower if lower and upper are same.",(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ol"},"Step 7: Else, format the number like ",(0,i.kt)("inlineCode",{parentName:"li"},"${lower} -> ${upper}"),".",(0,i.kt)("br",null))),(0,i.kt)(o.Z,{mdxType:"CodeBlock"},"\nvar findMissingRanges = function(nums, lower, upper) {\n    const result = [];\n    let previous = lower - 1;\n    function formatMissingNumbers(lower, upper) {\n      if (lower === upper) {\n        return lower.toString()\n      }\n      return lower.toString() + upper.toString()\n    }\n    // iterate the given numbers.\n    for(let i=0;i<=nums.length;i++) {\n      let current = (i < nums.length) ? nums[i] : upper + 1;\n      // add the missing numbers.\n      if(previous + 1 <= current - 1) {\n        result.push(\n          formatMissingNumbers(\n            previous + 1,\n            current - 1\n          )\n        )\n      }\n      // assign current value to previous\n      previous = current\n    }\n    return result;\n};\n".trim()),(0,i.kt)(p.Z,{type:"time",value:"n+m",mdxType:"BigO"}),(0,i.kt)(p.Z,{type:"space",value:"n+m",mdxType:"BigO"}),(0,i.kt)("h3",null,(0,i.kt)(u.Z,{label:"$Approach-2$",name:!0,mdxType:"AnchorLink"})),(0,i.kt)(o.Z,{mdxType:"CodeBlock"},"\nvar findMissingRanges = function(nums, lower, upper) {\n  // Code goes here...\n}\n".trim()),(0,i.kt)(p.Z,{type:"time",value:"max(N1\u200b,N2\u200b)",mdxType:"BigO"}),(0,i.kt)(p.Z,{type:"space",value:"max(N1\u200b,N2\u200b)",mdxType:"BigO"}),(0,i.kt)("h3",null,(0,i.kt)(u.Z,{label:"$Time-Optimized$",name:!0,mdxType:"AnchorLink"})),(0,i.kt)("p",null,"Coming Soon..."),(0,i.kt)(o.Z,{mdxType:"CodeBlock"},"\nCode goes here...\n".trim()),(0,i.kt)(p.Z,{type:"time",value:"n+m",mdxType:"BigO"}),(0,i.kt)(p.Z,{type:"space",value:"n+m",mdxType:"BigO"}),"### ",(0,i.kt)(u.Z,{label:"$Space-Optimized$",name:!0,mdxType:"AnchorLink"}),"Coming Soon...",(0,i.kt)(o.Z,{mdxType:"CodeBlock"},"\nCode goes here...\n".trim()),(0,i.kt)(p.Z,{type:"time",value:"n+m",mdxType:"BigO"}),(0,i.kt)(p.Z,{type:"space",value:"n+m",mdxType:"BigO"}))}g.isMDXComponent=!0}}]);